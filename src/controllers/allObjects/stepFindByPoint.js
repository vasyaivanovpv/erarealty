const Scene = require("telegraf/scenes/base");
const { getFilterObject } = require("../../helpers");

const ObjectRe = require("../../models/ObjectRe");

const stepFindByPoint = new Scene("step_find_by_point");

stepFindByPoint.enter(async (ctx) => {
  return ctx.replyWithMarkdown(
    `üîç *–ü–æ–∏—Å–∫ –æ–±—ä–µ–∫—Ç–∞ –ø–æ ‚Ññ* \n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏. \n\n–ù–∞–ø—Ä–∏–º–µ—Ä: 1608751933125`
  );
});

stepFindByPoint.start(async (ctx) => {
  await ctx.scene.enter("main_menu");
});

stepFindByPoint.on("text", async (ctx) => {
  const { text } = ctx.message;
  const { allObjects } = ctx.session;

  const filterDB = getFilterObject(allObjects.filter);
  filterDB.point = text;

  const objectReDB = await ObjectRe.findOne(filterDB);
  if (!objectReDB)
    return ctx.replyWithMarkdown(
      `‚ùóÔ∏è –û–±—ä–µ–∫—Ç –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞ –µ—â–µ —Ä–∞–∑!`
    );

  ctx.session.editObjectRe.point = text;

  return ctx.scene.enter("step_edit_object_re");
});

stepFindByPoint.use(async (ctx) => {
  return ctx.replyWithMarkdown(`‚ùóÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.`);
});

module.exports = stepFindByPoint;
