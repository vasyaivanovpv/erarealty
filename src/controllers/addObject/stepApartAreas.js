const Scene = require("telegraf/scenes/base");
const { textBlockLimits } = require("../../constants");
const { isFloat, toNumber } = require("../../utils");

const stepApartAreas = new Scene("step_apart_areas");

stepApartAreas.enter(async (ctx) => {
  return ctx.replyWithMarkdown(
    `üß∞ *–ü–ª–æ—â–∞–¥—å –∫–≤–∞—Ä—Ç–∏—Ä—ã* \n\n–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –æ –ø–ª–æ—â–∞–¥–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã (*–æ–±—â–∞—è –ø–ª–æ—â–∞–¥—å, –∂–∏–ª–∞—è –ø–ª–æ—â–∞–¥—å, –ø–ª–æ—â–∞–¥—å –∫—É—Ö–Ω–∏*) –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ —á–µ—Ä–µ–∑ —Å–∏–º–≤–æ–ª "/". \n\n–ù–∞–ø—Ä–∏–º–µ—Ä: 76/42.6/12.2`
  );
});

stepApartAreas.start(async (ctx) => {
  await ctx.scene.enter("main_menu");
});

stepApartAreas.on("text", async (ctx) => {
  if (
    ctx.message.text.length >
    textBlockLimits.TOTAL_AREA +
      textBlockLimits.LIVING_AREA +
      textBlockLimits.KITCHEN_AREA
  ) {
    return ctx.replyWithMarkdown(
      `‚ùóÔ∏è –í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç —Å–∏–º–≤–æ–ª–æ–≤! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ —Å–Ω–æ–≤–∞.`
    );
  }

  const parseText = ctx.message.text.split("/");
  if (parseText.length < 3)
    return ctx.replyWithMarkdown(`‚ùóÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã!`);
  if (parseText.length > 3)
    return ctx.replyWithMarkdown(`‚ùóÔ∏è –í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã!`);

  const totalArea = toNumber(parseText[0]);
  if (!isFloat(totalArea))
    return ctx.replyWithMarkdown(
      `‚ùóÔ∏è –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ "–æ–±—â–∞—è –ø–ª–æ—â–∞–¥—å"!`
    );
  const livingArea = toNumber(parseText[1]);
  if (!isFloat(livingArea))
    return ctx.replyWithMarkdown(
      `‚ùóÔ∏è –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ "–∂–∏–ª–∞—è –ø–ª–æ—â–∞–¥—å"!`
    );
  const kitchenArea = toNumber(parseText[2]);
  if (!isFloat(kitchenArea))
    return ctx.replyWithMarkdown(
      `‚ùóÔ∏è –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ "–ø–ª–æ—â–∞–¥—å –∫—É—Ö–Ω–∏"!`
    );
  if (totalArea < livingArea + kitchenArea)
    return ctx.replyWithMarkdown(
      `‚ùóÔ∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏–µ! –û–±—â–∞—è –ø–ª–æ—â–∞–¥—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ —Å—É–º–º—ã –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø–ª–æ—â–∞–¥–µ–π!`
    );

  ctx.session.post.totalArea = totalArea;
  ctx.session.post.livingArea = livingArea;
  ctx.session.post.kitchenArea = kitchenArea;

  return ctx.scene.enter("step_number_rooms");
});

stepApartAreas.use(async (ctx) => {
  return ctx.replyWithMarkdown(`‚ùóÔ∏è –í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–ª–æ—â–∞–¥—å –∫–≤–∞—Ä—Ç–∏—Ä—ã!`);
});

module.exports = stepApartAreas;
