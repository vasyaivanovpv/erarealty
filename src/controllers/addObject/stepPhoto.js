const Scene = require("telegraf/scenes/base");
const mediaGroup = require("telegraf-media-group");

const stepPhoto = new Scene("step_photo");

stepPhoto.use(mediaGroup());

stepPhoto.enter(async (ctx) => {
  return ctx.replyWithMarkdown(
    `üì∑ *–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏* \n\n–ü—Ä–∏—à–ª–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∫–∞–∫ –∞–ª—å–±–æ–º –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø—Ä–∏ —ç—Ç–æ–º *–Ω–µ –±–æ–ª–µ–µ 10 —à—Ç—É–∫*.`
  );
});

stepPhoto.start(async (ctx) => {
  await ctx.scene.enter("main_menu");
});

stepPhoto.on("media_group", async (ctx) => {
  ctx.session.post.photo = ctx.mediaGroup
    .filter((file) => file.photo)
    .map((file) => file.photo[0].file_id);

  return ctx.scene.enter(`step_price`);
});

stepPhoto.on("photo", async (ctx) => {
  ctx.session.post.photo = ctx.message.photo[0].file_id;

  return ctx.scene.enter(`step_price`);
});

stepPhoto.use((ctx) =>
  ctx.replyWithMarkdown(`‚ùóÔ∏è –ü—Ä–∏—à–ª–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏!`)
);

module.exports = stepPhoto;
