const { ADMIN_CHAT } = require("../../config");

const Scene = require("telegraf/scenes/base");
const Markup = require("telegraf/markup");
const { typesQuery } = require("../../constants");
const { escapeChar, formatPrice } = require("../../utils");
const { createMiniCaption } = require("../../helpers");

const ObjectRe = require("../../models/ObjectRe");

const stepAgreement = new Scene("step_agreement");

stepAgreement.start(async (ctx) => {
  await ctx.scene.enter("public_main_menu");
});

stepAgreement.enter(async (ctx) => {
  return ctx.replyWithMarkdown(
    `üëç *–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ* \n\n–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é —Å–≤–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∏ –ø–µ—Ä–µ–¥–∞—á—É –º–æ–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ –æ—Ç–∫—Ä—ã—Ç—ã–º –∫–∞–Ω–∞–ª–∞–º –ò–Ω—Ç–µ—Ä–Ω–µ—Ç, –≤ —Ü–µ–ª—è—Ö –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –º–Ω–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ–Ω—è –æ –Ω–µ–º. –û—Ç–ø—Ä–∞–≤–ª—è—è –¥–∞–Ω–Ω—É—é –∑–∞—è–≤–∫—É, —è –ø–æ–Ω–∏–º–∞—é –∏ —Å–æ–≥–ª–∞—à–∞—é—Å—å —Å —Ç–µ–º, —á—Ç–æ —É–∫–∞–∑–∞–Ω–Ω–∞—è –≤ –∑–∞—è–≤–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã —Å–æ –º–Ω–æ–π –∫–∞–∫ —Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–æ–º-–∑–∞–µ–º—â–∏–∫–æ–º.`,
    Markup.inlineKeyboard([
      Markup.callbackButton(
        "–ü–û–î–¢–í–ï–†–ñ–î–ê–Æ",
        JSON.stringify({ type: typesQuery.AGREEMENT })
      ),
    ]).extra()
  );
});

stepAgreement.on("callback_query", async (ctx) => {
  const { type } = JSON.parse(ctx.callbackQuery.data);
  const { id, first_name, last_name } = ctx.from;
  const userName = [first_name, last_name].filter((v) => v).join(" ");
  const { applyMortgage } = ctx.session;

  switch (type) {
    case typesQuery.AGREEMENT:
      const objectReDB = await ObjectRe.findOne({ point: applyMortgage.point });

      const formatDownPayment = formatPrice(applyMortgage.downPayment);
      const escapeUserName = escapeChar(userName);
      const escapeFio = escapeChar(applyMortgage.fio);
      const escapeSeniority = escapeChar(applyMortgage.seniority);
      const escapePhone = escapeChar(applyMortgage.phone);
      const escapeConvenientTime = escapeChar(applyMortgage.convenientTime);
      const escapeEmail = escapeChar(applyMortgage.email);

      const miniCaption = createMiniCaption(objectReDB);
      const applyCaption = `*–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê* \n\n${miniCaption} \n\n*${escapeFio}* \n–í–æ–∑—Ä–∞—Å—Ç: *${applyMortgage.age}* \n–ß–ª–µ–Ω–æ–≤ —Å–µ–º—å–∏: *${applyMortgage.numberFamilyMembers}* \n\n–ü–µ—Ä–≤-–Ω—ã–π –≤–∑–Ω–æ—Å: *${formatDownPayment} ‚ÇΩ* \n–°—Ç–∞–∂: ${escapeSeniority} \n\n*–ö–æ–Ω—Ç–∞–∫—Ç—ã* \n–¢–µ–ª–µ—Ñ–æ–Ω: ${escapePhone} \n–£–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è: ${escapeConvenientTime} \nEmail: ${escapeEmail} \n–ü—Ä–∏—à–ª–æ –æ—Ç: [${escapeUserName}](tg://user?id=${id})`;

      await ctx.telegram.sendMessage(
        ADMIN_CHAT,
        applyCaption,
        Markup.inlineKeyboard([
          Markup.callbackButton(
            "–ü—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É",
            JSON.stringify({ type: typesQuery.ACCEPT })
          ),
        ]).extra({ parse_mode: "Markdown" })
      );

      await ctx.editMessageText(
        "üëç *–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ* \n\n–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞, —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –ø–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º –≤–∞–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º!",
        { parse_mode: "Markdown" }
      );

      await ctx.answerCbQuery("–ó–∞—è–≤–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞");
      return ctx.scene.enter("public_main_menu");

    default:
      await ctx.replyWithMarkdown(
        `‚ùóÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é _–ó–∞—è–≤–∫–∞ –Ω–∞ –∏–ø–æ—Ç–µ–∫—É_.`
      );
      break;
  }

  await ctx.answerCbQuery();
});

stepAgreement.use(async (ctx) => {
  await ctx.replyWithMarkdown(
    `‚ùóÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é _–ó–∞—è–≤–∫–∞ –Ω–∞ –∏–ø–æ—Ç–µ–∫—É_.`
  );
});

module.exports = stepAgreement;
