const Scene = require("telegraf/scenes/base");
const { isInteger } = require("../../utils");

const minAge = 18;
const maxAge = 75;

const stepAge = new Scene("step_age");

stepAge.enter(async (ctx) => {
  return ctx.replyWithMarkdown(
    `üéÇ *–í–æ–∑—Ä–∞—Å—Ç* \n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–Ω—ã—Ö –ª–µ—Ç. \n\n–ù–∞–ø—Ä–∏–º–µ—Ä: 30`
  );
});

stepAge.start(async (ctx) => {
  await ctx.scene.enter("public_main_menu");
});

stepAge.on("text", async (ctx) => {
  const age = Number(ctx.message.text);

  if (!isInteger(age))
    return ctx.replyWithMarkdown(
      `‚ùóÔ∏è –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ –≤ –ø—Ä–∏–º–µ—Ä–µ!`
    );

  if (age < minAge)
    return ctx.replyWithMarkdown(
      `‚ùóÔ∏è –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –≤–∞–º –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 18 –ª–µ—Ç.`
    );
  if (age > maxAge)
    return ctx.replyWithMarkdown(
      `‚ùóÔ∏è –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –≤–∞–º –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ 75 –ª–µ—Ç.`
    );

  ctx.session.applyMortgage.age = age;

  return ctx.scene.enter("step_number_family_members");
});

stepAge.use(async (ctx) =>
  ctx.replyWithMarkdown(`‚ùóÔ∏è –í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–æ–∑—Ä–∞—Å—Ç!`)
);

module.exports = stepAge;
