const Scene = require("telegraf/scenes/base");

const limitTimeSymbols = 20;

const stepConvenientTime = new Scene("step_convenient_time");

stepConvenientTime.enter(async (ctx) => {
  return ctx.replyWithMarkdown(
    `üïû *–£–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –∑–≤–æ–Ω–∫–∞* \n\n–ù–∞–ø–∏—à–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤–∞–º –≤—Ä–µ–º—è –¥–ª—è –∑–≤–æ–Ω–∫–∞. \n\n–ù–∞–ø—Ä–∏–º–µ—Ä: —Å 18:00 –¥–æ 21:00`
  );
});

stepConvenientTime.start(async (ctx) => {
  await ctx.scene.enter("public_main_menu");
});

stepConvenientTime.on("text", async (ctx) => {
  if (ctx.message.text.length > limitTimeSymbols)
    return ctx.replyWithMarkdown(
      `‚ùóÔ∏è –í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç —Å–∏–º–≤–æ–ª–æ–≤! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ —Å–Ω–æ–≤–∞.`
    );

  ctx.session.applyMortgage.convenientTime = ctx.message.text;

  return ctx.scene.enter("step_email");
});

stepConvenientTime.use(async (ctx) =>
  ctx.replyWithMarkdown(`‚ùóÔ∏è –í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –∑–≤–æ–Ω–∫–∞!`)
);

module.exports = stepConvenientTime;
